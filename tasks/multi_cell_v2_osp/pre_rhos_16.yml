- name: download the cirros image for instance deployment post_tasks
  get_url:
        url: http://download.cirros-cloud.net/0.4.0/cirros-0.4.0-x86_64-disk.img
        dest: "{{ ansible_env.HOME }}"

- name: create cell1 directory
  file:
        path: "{{ ansible_env.HOME }}/cell1"
        state: directory

- name: parse provided OSP version
  set_fact:
    oc_version: "{{ test.openstack.version|default(overcloud_version) }}"
    osp_release: "{{ test.openstack.version|default(overcloud_version)|openstack_release }}"

- name: set OSP version conditional based on provided version
  set_fact:
    version_to_use: "{{ oc_version if oc_version | float | string == oc_version | string else osp_release }}"

- name: export cell-input.yaml file
  shell: |
        source ~/stackrc
        sudo --preserve-env openstack overcloud cell export cell1 --control-plane-stack {{ test.overcloud.stack }} -f -o {{ ansible_env.HOME }}/cell1/cell-input.yaml
  when: version_to_use is version('16.2', '<')

- name: export cell-input.yaml file 16.2+
  shell: |
        source ~/stackrc
        sudo --preserve-env openstack overcloud cell export --control-plane-stack {{ test.overcloud.stack }} -f --output-file {{ ansible_env.HOME }}/cell1/cell-input.yaml
  when: version_to_use is version('16.2', '>=')

- name: Generate a role file
  shell: |
     source ~/stackrc
     openstack overcloud roles generate --roles-path /usr/share/openstack-tripleo-heat-templates/roles -o {{ ansible_env.HOME }}/cell1/cell_roles_data.yaml Compute CellController

- name: Generate cell1.yaml
  block:
  - name: Get cloud names path
    shell: |
        grep cloud-names.yaml {{ ansible_env.HOME }}/overcloud_deploy.sh | awk '{print $2}'
    register: cloud_name_path

  - name: Gather cloud domain suffix
    shell: |
        grep CloudDomain {{ cloud_name_path.stdout }} | awk '{print $2}'
    register: cloud_domain_shell
    when: cloud_name_path.stdout != "" | default(False)

  - name: Set cloud domain suffix
    set_fact:
      cloud_domain_suffix: "{{ cloud_domain_shell.stdout | default('ooo.test')}}"

  - name: copy the cell1.yaml environment file
    template:
          src: templates/rhos_16/cell1.yaml.j2
          dest: "{{ ansible_env.HOME }}/cell1/cell1.yaml"

- name: copy the post_tasks script
  template:
        src: templates/rhos_16/post_tasks.sh
        dest: "{{ ansible_env.HOME }}/cell1/post_tasks.sh"
        mode: '0755'

- name: copy overcloud deploy script to create deploy script for multi cell deployment
  copy:
        src: "{{ ansible_env.HOME }}/overcloud_deploy.sh"
        dest: "{{ ansible_env.HOME }}/overcloud_cell_deployment.sh"
        remote_src: yes

- name: create overcloud deploy command including the cell env files
  include: ../common/append_env_to_script.yml
  loop_control:
        loop_var: confchange
  with_items:
        - step: "Add additional cell Deployment"
          script: "~/overcloud_cell_deployment.sh"
          environment_file:
            - "{{ ansible_env.HOME }}/cell1/cell1.yaml"
            - "{{ ansible_env.HOME }}/cell1/cell-input.yaml"
          role_file:
            - "{{ ansible_env.HOME }}/cell1/cell_roles_data.yaml"

- name: change the stack name
  replace:
        path: "{{ ansible_env.HOME }}/overcloud_cell_deployment.sh"
        regexp: "--stack {{ test.overcloud.stack }}"
        replace: '--stack cell1'

- name: check for ceph deployment
  shell: |
      grep ceph-ansible.yaml {{ ansible_env.HOME }}/overcloud_cell_deployment.sh
  failed_when: false
  register: ceph_present

- name: Switch ceph to external
  when: ceph_present.rc == 0
  block:
      - name: Switch ceph-ansible to ceph-ansible-external
        replace:
            path: "{{ ansible_env.HOME }}/overcloud_cell_deployment.sh"
            regexp: "ceph-ansible.yaml"
            replace: 'ceph-ansible-external.yaml'
      - name: Get control stack config
        shell: |
            source ~/stackrc
            openstack overcloud config download --name {{ test.overcloud.stack }}
      - name: Get CephClusterFSID
        shell: |
            grep " fsid:" tripleo-config/{{ test.overcloud.stack }}/external_deploy_steps_tasks.yaml | awk '{print $2}'
        register: fsid
      - name: Get CephClientKey
        shell: |
            grep -A 1 openstack_client tripleo-config/{{ test.overcloud.stack }}/external_deploy_steps_tasks.yaml | grep key | awk '{print $2}'
        register: key
      - name: Get CephExternalMonHost
        shell: |
            grep cont tripleo-config/{{ test.overcloud.stack }}/global_vars.yaml | grep storage$ | awk '{print $2}' |  paste -sd "," -
        register: mons
      - name: Create cell1 ceph.yaml
        copy:
            dest: "{{ ansible_env.HOME }}/cell1/ceph.yaml"
            content: |
              parameter_defaults:
                CephClusterFSID: "{{ fsid.stdout }}"
                CephClientKey: "{{ key.stdout }}"
                CephExternalMonHost: "{{ mons.stdout }}"
      - name: Add ceph template to deploy script
        replace:
            path: "{{ ansible_env.HOME }}/overcloud_cell_deployment.sh"
            regexp: "{{ ansible_env.HOME }}/cell1/cell1.yaml"
            replace: '{{ ansible_env.HOME }}/cell1/cell1.yaml -e {{ ansible_env.HOME }}/cell1/ceph.yaml'

- name: Remove cloud names yaml if present
  ansible.builtin.lineinfile:
    path: "{{ ansible_env.HOME }}/overcloud_cell_deployment.sh"
    state: absent
    regexp: 'cloud-names'

- name: Remove public vip yaml if present
  ansible.builtin.lineinfile:
    path: "{{ ansible_env.HOME }}/overcloud_cell_deployment.sh"
    state: absent
    regexp: 'public_vip'
